using PCBuilder.Application.Interfaces.Auth;

namespace PCBuilder.Application.Services;

public class EmailService(IEmailSender emailSender, IEmailTokenProvider tokenProvider):IEmailService
{
    private readonly IEmailSender _emailSender = emailSender;
    private readonly IEmailTokenProvider _tokenProvider = tokenProvider;
    
    public async Task SendConfirmEmailAsync(string email,Guid userId)
    {
        var message = @"
        <!DOCTYPE html>
        <html>
        <head>
            <title>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</title>
        </head>
        <body>
          <div style=""font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 600px; margin: auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px; background-color: #f9f9f9;"">
        <h2 style=""text-align: center; color: #4CAF50;"">–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!</h2>
        <p>–ü—Ä–∏–≤–µ—Ç!</p>
        <p>–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç–µ—Å—å –∫ [–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞]. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:</p>
        <p style=""text-align: center; margin: 30px 0;"">
            <a href=""{EmailToken}"" style=""background-color: #4CAF50; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-size: 18px; font-weight: bold; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);"">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</a>
        </p>
        <p>–ö–Ω–æ–ø–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç? –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ —Å–≤–æ–π –±—Ä–∞—É–∑–µ—Ä:</p>
        <p style=""font-size: 14px; color: #555; word-wrap: break-word;"">EmailToken</p>
        <p>–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤—ã, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
        <p>–£–≤–∏–¥–∏–º—Å—è,<br>–ö–æ–º–∞–Ω–¥–∞ [–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞] üòä</p>
        </body>
        </html>";
        
        string subject = "Confirm your email";
        
        string token= _tokenProvider.GenerateToken(userId);
        
        var confirmationLink = $"https://localhost:5091/confirm_email?emailToken={token}";
            //http://localhost:5090/confirm_email?emailToken=g

        var body = message.Replace("{EmailToken}", confirmationLink);
        await _emailSender.SendEmailAsync(email,subject, body);
    }
}